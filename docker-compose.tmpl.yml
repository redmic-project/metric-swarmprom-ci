version: '3.5'

services:
  dockerd-exporter:
    image: stefanprodan/caddy
    environment:
      - DOCKER_GWBRIDGE_IP
    networks:
      - metric-net
    volumes:
      - dockerd-exporter:/www
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile

  cadvisor:
    image: google/cadvisor
    command: -logtostderr -docker_only
    networks:
      - metric-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: stefanprodan/swarmprom-grafana:5.0.1
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    networks:
      - metric-net
      - traefik-net
    volumes:
      - grafana:/var/lib/grafana
      - grafana-etc:/etc/grafana
      - grafana-log:/var/log/grafana

  alertmanager:
    image: stefanprodan/swarmprom-alertmanager:v0.14.0
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    networks:
      - metric-net
      - traefik-net
    volumes:
      - alertmanager:/alertmanager

  unsee:
    image: cloudflare/unsee:v0.8.0
    networks:
      - metric-net
      - traefik-net
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"

  node-exporter:
    image: stefanprodan/swarmprom-node-exporter:v0.15.2
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      # no collectors are explicitely enabled here, because the defaults are just fine,
      # see https://github.com/prometheus/node_exporter
      # disable ipvs collector because it barfs the node-exporter logs full with errors on my centos 7 vm's
      - '--no-collector.ipvs'
    environment:
      - NODE_ID={{.Node.ID}}
    networks:
      - metric-net
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename

  pushgateway:
    image: prom/pushgateway
    command:
      - '--persistence.file=/db/metrics'
    networks:
      - metric-net
    volumes:
      - pushgateway:/db

  prometheus:
    image: stefanprodan/swarmprom-prometheus:v2.2.0-rc.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=30d'
    user: "0:0"
    networks:
      - metric-net
      - traefik-net
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml

networks:
  metric-net:
    external: true

  traefik-net:
    external: true

configs:
  dockerd_config:
    file: ./swarmprom/dockerd-exporter/Caddyfile

  node_rules:
    file: ./swarmprom/prometheus/rules/swarm_node.rules.yml

  task_rules:
    file: ./swarmprom/prometheus/rules/swarm_task.rules.yml
