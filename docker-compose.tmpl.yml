version: '3.5'

services:
  dockerd-exporter:
    image: stefanprodan/caddy
    environment:
      - DOCKER_GWBRIDGE_IP
    networks:
      - metric-net
    volumes:
      - dockerd-exporter:/www
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 16M

  cadvisor:
    image: google/cadvisor
    command: -logtostderr -docker_only
    networks:
      - metric-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    healthcheck:
      test: wget --spider -S -t 3 http://localhost:8080/metrics
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2m
    deploy:
      mode: global
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          memory: 64M

  grafana:
    image: stefanprodan/swarmprom-grafana:5.3.4
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    networks:
      - metric-net
      - traefik-net
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.rule: Host:grafana.${PUBLIC_HOSTNAME}
        traefik.backend: grafana
        traefik.port: '3000'
      restart_policy:
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '1'
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: stefanprodan/swarmprom-alertmanager:v0.14.0
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    networks:
      - metric-net
      - traefik-net
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:alertmanager.${PUBLIC_HOSTNAME}
        traefik.backend: alertmanager
        traefik.port: '9093'
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 32M

  unsee:
    image: cloudflare/unsee:v0.8.0
    networks:
      - metric-net
      - traefik-net
    environment:
      - ALERTMANAGER_URIS=default:http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:unsee.${PUBLIC_HOSTNAME}
        traefik.backend: unsee
        traefik.port: '8080'
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 32M

  node-exporter:
    image: stefanprodan/swarmprom-node-exporter:v0.16.0
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    environment:
      - NODE_ID={{.Node.ID}}
    networks:
      - metric-net
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    deploy:
      mode: global
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 32M

  pushgateway:
    image: prom/pushgateway
    command:
      - '--persistence.file=/db/metrics'
    networks:
      - metric-net
      - traefik-net
    volumes:
      - pushgateway:/db
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:pushgateway.${PUBLIC_HOSTNAME}
        traefik.backend: pushgateway
        traefik.port: '9091'
      restart_policy:
        delay: 30s
        window: 1m
      resources:
        limits:
          cpus: '0.5'
          memory: 64M
        reservations:
          memory: 16M

networks:
  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    external: true

volumes:
  pushgateway:
    name: ${PUSHGATEWAY_VOL_NAME:-pushgateway-vol}

  alertmanager:
    name: ${ALERTMANAGER_VOL_NAME:-alertmanager-vol}

  dockerd-exporter:
    name: ${DOCKERD_EXPORTER_VOL_NAME:-dockerd-exporter-vol}

configs:
  dockerd_config:
    name: ${DOCKERD_CONFIG_NAME:-dockerd_config}
    file: ./swarmprom/dockerd-exporter/Caddyfile
