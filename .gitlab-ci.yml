stages:
  - deploy

deploy-dev:
  stage: deploy
  image: registry.gitlab.com/redmic-project/docker/docker-deploy
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    DOCKER_DRIVER: overlay2
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    DEPLOY_DIR_NAME: '.'
    STATUS_CHECK_DELAY: 60
    STACK: metric
    SERVICES_TO_CHECK: metric_dockerd-exporter metric_cadvisor metric_grafana metric_alertmanager metric_unsee metric_node-exporter metric_prometheus
    ADMIN_USER: ${DEV_ADMIN_USER}
    ADMIN_PASSWORD: ${DEV_ADMIN_PASSWORD}
    UI_AUTH: ${DEV_UI_AUTH}
    PUBLIC_HOSTNAME: ${DEV_PUBLIC_HOSTNAME}
  services:
    - docker:dind
  script:
    - create-nets.sh metric-net
    - >
      deploy.sh ADMIN_USER=${ADMIN_USER} ADMIN_PASSWORD=${ADMIN_PASSWORD} UI_AUTH=${UI_AUTH}
      PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
  environment:
    name: dev
  only:
    - dev
  when: manual

deploy-supporting-branch:
  stage: deploy
  image: registry.gitlab.com/redmic-project/docker/docker-deploy
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    DOCKER_DRIVER: overlay2
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    DEPLOY_DIR_NAME: '.'
    STATUS_CHECK_DELAY: 60
    STACK: metric
    SERVICES_TO_CHECK: metric_dockerd-exporter metric_cadvisor metric_grafana metric_alertmanager metric_unsee metric_node-exporter metric_prometheus
    ADMIN_USER: ${DEV_ADMIN_USER}
    ADMIN_PASSWORD: ${DEV_ADMIN_PASSWORD}
    UI_AUTH: ${DEV_UI_AUTH}
    PUBLIC_HOSTNAME: ${DEV_PUBLIC_HOSTNAME}
  services:
    - docker:dind
  script:
    - create-nets.sh metric-net
    - >
      deploy.sh ADMIN_USER=${ADMIN_USER} ADMIN_PASSWORD=${ADMIN_PASSWORD} UI_AUTH=${UI_AUTH}
      PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
  environment:
    name: dev
  only:
    - branches
  except:
    - master
    - dev
  when: manual

deploy-pro:
  stage: deploy
  image: registry.gitlab.com/redmic-project/docker/docker-deploy
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    DOCKER_DRIVER: overlay2
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    DEPLOY_DIR_NAME: '.'
    STATUS_CHECK_DELAY: 60
    STACK: metric
    SERVICES_TO_CHECK: metric_dockerd-exporter metric_cadvisor metric_grafana metric_alertmanager metric_unsee metric_node-exporter metric_prometheus
    ADMIN_USER: ${PRO_ADMIN_USER}
    ADMIN_PASSWORD: ${PRO_ADMIN_PASSWORD}
    UI_AUTH: ${PRO_UI_AUTH}
    PUBLIC_HOSTNAME: ${PRO_PUBLIC_HOSTNAME}
  services:
    - docker:dind
  script:
    - create-nets.sh metric-net
    - >
      deploy.sh ADMIN_USER=${ADMIN_USER} ADMIN_PASSWORD=${ADMIN_PASSWORD} UI_AUTH=${UI_AUTH}
      PUBLIC_HOSTNAME=${PUBLIC_HOSTNAME}
  environment:
    name: pro
  only:
    - master
  when: manual
