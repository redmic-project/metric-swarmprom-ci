version: '3.5'

services:
  dockerd-exporter:
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    deploy:
      mode: global
      restart_policy:
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    ports:
      - target: 3000
        published: 18004
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.port: "3000"
        traefik.docker.network: traefik-net
        traefik.frontend.rule: Host:grafana.${PUBLIC_HOSTNAME}
        traefik.backend: grafana
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    ports:
      - target: 9093
        published: 9093
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.port: "9093"
        traefik.docker.network: traefik-net
        traefik.frontend.auth.basic: ${UI_AUTH}
        traefik.frontend.rule: Host:alertmanager.${PUBLIC_HOSTNAME}
        traefik.backend: alertmanager
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  unsee:
    ports:
      - target: 9094
        published: 9094
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.port: "9094"
        traefik.docker.network: traefik-net
        traefik.frontend.auth.basic: ${UI_AUTH}
        traefik.frontend.rule: Host:unsee.${PUBLIC_HOSTNAME}
        traefik.backend: unsee
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    ports:
      - target: 9090
        published: 9090
        mode: host
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.port: "9090"
        traefik.docker.network: traefik-net
        traefik.frontend.auth.basic: ${UI_AUTH}
        traefik.frontend.rule: Host:prometheus.${PUBLIC_HOSTNAME}
        traefik.backend: prometheus
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        delay: 1m
        window: 3m
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 128M

volumes:
  prometheus:
    name: prometheus-vol
  grafana:
    name: grafana-vol
  alertmanager:
    name: alertmanager-vol
